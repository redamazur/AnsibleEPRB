---
- hosts: prod
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3


  tasks:


    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes
    - name: Upgrade the OS (apt-get dist-upgrade)
      apt:
        name: 
        state: latest

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "ubuntu"
        source: pull

    - name: Create default containers
      docker_container:
        name: "monDocker{{ item }}"
        image: "ubuntu"
        command: sleep 1d
        state: present
      with_sequence: count=4        

    - name: Mise en place des r√®gles iptables 
      lineinfile: 
        dest: /etc/sysctl.d/k8s.conf   
        line: 
        - "net.bridge.bridge-nf-call-iptables = 1" 
        - "net.bridge.bridge-nf-call-ip6tables = 1" 
        create: yes

      notify:
        - sysctl  
        - dockerRestart



    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
        selection: hold

      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

    - name: update kernel settings
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        sysctl_set: yes
        state: present
        reload: yes

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="10.0.2.10"  --node-name k8s-master --pod-network-cidr=10.0.0.0/16

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}


    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted








  handlers:
    - name: sysctl
      shell:
        cmd: sysctl --system

    - name: dockerRestart
      service:
        name: docker
        state: reloaded

